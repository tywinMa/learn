name: 自动构建部署

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Node.js环境
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 部署到服务器
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          # 进入项目目录
          cd ${{ secrets.PROJECT_PATH || '/var/www/learn' }}

          # 暂存现有代码（如果有未提交的更改）
          git stash

          # 拉取最新代码
          git pull origin main


          chmod +x ./reset-data.sh
          ./reset-data.sh --admin-only

          # 设置Node.js环境
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

          # 清理pm2进程
          pm2 delete all || true

          # 1. 构建前端项目
          echo "📦 开始构建前端项目..."
          
          # 构建learn-admin项目
          cd ./learn-admin
          npm install --legacy-peer-deps
          npm run build
          echo "✅ learn-admin构建完成"
          
          # 构建learn-app项目
          cd ${{ secrets.PROJECT_PATH || '/var/www/learn' }}
          cd ./learn-app
          npm install --legacy-peer-deps
          npm run build
          echo "✅ learn-app构建完成"
          
          # 安装后端依赖
          cd ${{ secrets.PROJECT_PATH || '/var/www/learn' }}
          cd ./learn-server
          npm install --legacy-peer-deps
          echo "✅ learn-server依赖安装完成"

          # 2. 使用pm2启动服务
          echo "🚀 使用pm2启动服务..."
          
          # 启动learn-admin预览服务 (端口5173)
          cd ${{ secrets.PROJECT_PATH || '/var/www/learn' }}/learn-admin
          pm2 start npm --name "learn-admin" -- run preview -- --port 5173 --host 0.0.0.0
          
          # 启动learn-server后端服务 (端口3000)
          cd ${{ secrets.PROJECT_PATH || '/var/www/learn' }}/learn-server  
          pm2 start npm --name "learn-server" -- run start
          
          # 保存pm2配置
          pm2 save
          pm2 startup


          echo "🎉 部署完成！"
          echo "服务地址："
          echo "- 后端API: http://$(hostname -I | awk '{print $1}'):3000"
          echo "- 管理端: http://$(hostname -I | awk '{print $1}'):5173"
          echo "- App端: http://$(hostname -I | awk '{print $1}'):8082"

  notify:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: 通知部署结果
      if: always()
      run: |
        if [ "${{ needs.build-and-deploy.result }}" == "success" ]; then
          echo "✅ 部署成功！"
          echo "所有服务已在以下端口启动："
          echo "- 后端服务 (learn-server): 3000"
          echo "- 管理端 (learn-admin): 5173" 
          echo "- App端 (learn-app): 8082"
          echo ""
          echo "使用 pm2 status 查看服务状态"
          echo "使用 pm2 logs 查看服务日志"
        else
          echo "❌ 部署失败，请检查日志。"
        fi 