
> learn-server-unified@1.0.0 dev
> nodemon src/index.js

[33m[nodemon] 3.1.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node src/index.js`[39m
Êï∞ÊçÆÂ∫ìËøûÊé•ÊàêÂäü
Êï∞ÊçÆÂ∫ìËøûÊé•ÊµãËØïÊàêÂäü
Áªü‰∏ÄÊúçÂä°Âô®ËøêË°åÂú® http://localhost:3000
AppÁ´ØÊé•Âè£: http://localhost:3000/api
AdminÁ´ØÊé•Âè£: http://localhost:3000/api/admin
[0mGET /api/subjects/math/units [36m304[0m 55.041 ms - -[0m
[0mGET /api/subjects/math [36m304[0m 7.061 ms - -[0m
[0mGET /api/users/user1/points [36m304[0m 4.282 ms - -[0m
Ëé∑ÂèñÂçïÂÖÉmath-1-1ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-1' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-1' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-1' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-1-2ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-2' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-2' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-2' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-1-3ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-3' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-3' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-3' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-1-4ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-4' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-4' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-4' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-1-5ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-5' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-5' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-5' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-1-6ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-6' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-6' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-6' LIMIT 1;",
  parameters: {}
}
[0mPOST /api/answer-records/user1/progress/batch [32m200[0m 12.103 ms - 1333[0m
Ëé∑ÂèñÂçïÂÖÉmath-2-1ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-1' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-1' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-1' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-2-2ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-2' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-2' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-2' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-2-3ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-3' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-3' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-3' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-2-4ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-4' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-4' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-4' LIMIT 1;",
  parameters: {}
}
[0mPOST /api/answer-records/user1/progress/batch [32m200[0m 5.589 ms - 897[0m
Ëé∑ÂèñÂçïÂÖÉmath-3-1ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-1' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-1' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-1' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-3-2ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-2' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-2' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-2' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-3-3ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-3' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-3' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-3' LIMIT 1;",
  parameters: {}
}
[0mPOST /api/answer-records/user1/progress/batch [32m200[0m 4.955 ms - 679[0m
[0mPOST /api/admin/auth/login [32m200[0m 65.352 ms - 354[0m
[0mGET /api/subjects/math/units [36m304[0m 24.337 ms - -[0m
[0mGET /api/subjects/math [36m304[0m 3.839 ms - -[0m
[0mGET /api/users/user1/points [36m304[0m 12.358 ms - -[0m
Ëé∑ÂèñÂçïÂÖÉmath-1-1ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-1' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-1' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-1' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-1-2ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-2' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-2' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-2' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-1-3ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-3' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-3' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-3' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-1-4ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-4' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-4' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-4' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-1-5ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-5' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-5' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-5' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-1-6ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-6' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-6' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-1-6' LIMIT 1;",
  parameters: {}
}
[0mPOST /api/answer-records/user1/progress/batch [32m200[0m 19.001 ms - 1333[0m
[0mPOST /api/admin/auth/login [32m200[0m 78.515 ms - 354[0m
Ëé∑ÂèñÂçïÂÖÉmath-2-1ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-1' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-1' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-1' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-2-2ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-2' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-2' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-2' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-2-3ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-3' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-3' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-3' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-2-4ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-4' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-4' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-2-4' LIMIT 1;",
  parameters: {}
}
[0mPOST /api/answer-records/user1/progress/batch [32m200[0m 28.840 ms - 897[0m
Ëé∑ÂèñÂçïÂÖÉmath-3-1ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-1' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-1' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-1' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-3-2ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-2' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-2' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-2' LIMIT 1;",
  parameters: {}
}
Ëé∑ÂèñÂçïÂÖÉmath-3-3ËøõÂ∫¶Â§±Ë¥•: Error
    at Database.<anonymous> (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.select (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async UnitProgress.findAll (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1140:21)
    at async UnitProgress.findOne (/Users/maxin/maxin/learn/learn-server/node_modules/sequelize/lib/model.js:1240:12)
    at async /Users/maxin/maxin/learn/learn-server/src/routes/answerRecords.js:479:35 {
  name: 'SequelizeDatabaseError',
  parent: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-3' LIMIT 1;"
  },
  original: [Error: SQLITE_ERROR: no such column: UnitProgress.userId] {
    errno: 1,
    code: 'SQLITE_ERROR',
    sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-3' LIMIT 1;"
  },
  sql: "SELECT `id`, `studentId`, `unitId`, `completed`, `stars`, `completedAt`, `studyCount`, `practiceCount`, `correctCount`, `incorrectCount`, `totalAnswerCount`, `totalTimeSpent`, `lastStudyTime`, `lastPracticeTime`, `averageResponseTime`, `masteryLevel`, `createdAt`, `updatedAt` FROM `UnitProgresses` AS `UnitProgress` WHERE `UnitProgress`.`userId` = 'user1' AND `UnitProgress`.`unitId` = 'math-3-3' LIMIT 1;",
  parameters: {}
}
[0mPOST /api/answer-records/user1/progress/batch [32m200[0m 2.684 ms - 679[0m
